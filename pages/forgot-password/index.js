import * as yup from 'yup';

import { Alert, Input, InputGroup, InputGroupText } from 'reactstrap';
import { Controller, useForm } from 'react-hook-form';
import { faLock, faUser } from '@fortawesome/free-solid-svg-icons';
import { useContext, useState } from 'react';

import { AuthContext } from '../../src/context/auth-context';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import Head from 'next/head';
import axios from 'axios';
import styles from '../../styles/login.module.scss';
import { useRouter } from 'next/router';
import { yupResolver } from '@hookform/resolvers/yup';

export default function ForgotPasswordPage() {
	const authContext = useContext(AuthContext);
	const router = useRouter();
	const [errorMess, setErrorMess] = useState('');
	const [successMess, setSuccessMess] = useState('');
	const handleRegister = () => {
		router.push('/register');
	};
	const validationSchema = yup.object({
		email: yup.string().email().required('Email is a required field'),
	});
	// console.log(authContext);
	const onSubmit = (data) => {
		axios
			.post('/api/auth/forgot-password', data)
			.then((res) => {
				console.log(res.data);
				setSuccessMess(res.data.msg);
			})
			.catch((err) => {
				console.log();
				setSuccessMess(err.response.data.error);
			});
	};

	const {
		control,
		handleSubmit,
		formState: { errors },
	} = useForm({
		defaultValues: {
			email: '',
		},
		resolver: yupResolver(validationSchema),
	});

	return (
		<div className={styles.loginWrapper}>
			<Head>
				<title>Zes</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<form onSubmit={handleSubmit(onSubmit)}>
				<div className={styles.content} style={{ height: '400px' }}>
					<div className={styles.innerLogin} style={{ height: '353px' }}>
						<p className={styles.signInHeading}>Forgot Password</p>

						{successMess !== '' && <Alert>{successMess}</Alert>}
						<p>{errorMess}</p>
						<Controller
							name={'email'}
							control={control}
							render={({ field }) => (
								<>
									<InputGroup size='lg' className={styles.inputGroup}>
										<InputGroupText className={styles.fieldLoginText}>
											<FontAwesomeIcon icon={faUser} />
										</InputGroupText>
										<Input
											size={'lg'}
											placeholder='Email'
											width={500}
											className={styles.textField}
											{...field}
										/>
									</InputGroup>
									{errors['email'] && (
										<p className={styles.errorMessage}>
											{errors['email'].message}
										</p>
									)}
								</>
							)}
						/>
						<br />
						<br />
						<button className={styles.loginButton} type='submit'>
							Forgot Password
						</button>
						<br />
						<br />

						<div className={styles.createAccLink}>
							<p>
								<span>Login</span>
								{'  '}| {'   '}
								<span onClick={handleRegister}>Create Account</span>
							</p>
						</div>
					</div>
				</div>
			</form>
		</div>
	);
}
